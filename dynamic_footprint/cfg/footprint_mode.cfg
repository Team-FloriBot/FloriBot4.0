#!/usr/bin/env python3
PACKAGE = "dynamic_footprint"
NODE = "dyn_footprint_node" # only for documentation
PREFIX = "FootprintMode"    # name prefix the generator will get: "<name>Config.py"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("update_local_footprint",   bool_t,   0, "Set to True if the current footprint settings shall be applied to footprint of local costmap.",  True)
gen.add("update_global_footprint",   bool_t,   0, "Set to True if the current footprint settings shall be applied to footprint of global costmap.",  False)

footprint_enum = gen.enum([gen.const("static",  int_t, 0, "Footprint leading carriage --> static, footprint following carriage --> none"),
                        gen.const("semi_static",  int_t, 1, "Driving forwards: Footprint leading carriage --> static, driving backwards: footprint following carriage --> static"),
                        gen.const("dynamic",     int_t, 2, "Footprint leading carriage --> static, footprint following carriage --> dynamic"),],
                        "An enum to choose between dynamic, semi-static and static footprint")

leader_enum = gen.enum([gen.const("front",      int_t, 0, "Front carriage --> leading carriage, rear carriage --> following carriage"),
                       gen.const("rear",        int_t, 1, "Rear carriage --> leading carriage, front carriage --> following carriage"),],
                       "An enum to choose between the front and rear carriage as the leading carriage")

gen.add("footprint_mode", int_t, 0, "Choose between dynamic and static footprint for Floribot4.0", 1, 0, 2, edit_method=footprint_enum)
gen.add("leading_car", int_t, 0, "Choose between the front and rear carriage as the leading carriage for Floribot4.0", 0, 0,   1, edit_method=leader_enum)
#                                                                                                              default ^, ^min,^max
exit(gen.generate(PACKAGE, NODE, PREFIX))